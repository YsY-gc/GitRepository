git config --global user.name "Your Name" //登录名
git config --global user.email "email@example.com" //登陆邮箱
git init //进入某个文件夹，将其初始化为git仓库

git status //查看当前状态

git add readme.txt //将文件加入暂存区
git commit -m "say something" //将暂存区文件提交到仓库

git log //查看提交日志

git reflog    //记录每一次命令，用于找回版本号

git diff readme.txt     //查看发生的变化

git reset --hard HEAD^ //回退上一个版本
git reset --hard 1094a //回到版本号为1094a...的版本

git revert -n 版本号  //不删除回退，优于reset
git commit -m xxxx 提交

git reset HEAD readme.txt  //撤销暂存区的修改
git checkout -- readme.txt //丢弃工作区修改
git reset  --hard HEAD^ //回退版本

git rm readme.txt //将文件删除后，在版本库删除
git commit -m "remove readme.txt"

git checkout -- readme.txt //将文件删除后，恢复

ssh-keygen -t rsa -C "youremail@example.com"//创建ssh key

git remote add origin git@github.com:YsY-gc/GitRepository //将本地仓库与远程仓库相关联，并命名为origin

git push origin master //将本地master分支推送到远程仓库  第一次加 -u 将本地分支与远程分支关联

git remote -v //查看远程仓库信息

git remote rm origin //将本地仓库与远程仓库取消关联

git clone git@github.com:YsY-gc/GitRepository //从远程仓库克隆
authentification认证错误，进入 控制面板\用户帐户\凭据管理器 删除 记录的账号密码。


git checkout -b dev //创建并切换到dev分支

git branch dev //创建分支
git checkout dev //切换分支

git branch //查看所有分支

git merge dev //先切换到master再将dev分支合并到master之上